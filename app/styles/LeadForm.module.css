/* LeadForm.module.css */

/* The entire page has a light background. */
.pageContainer {
  background-color: #fff;
  /* We don't necessarily need min-height: 100vh unless we want the page to stretch fully. */
}

/* 
  Hero Section: 
  - Has a background image (fake-hero-bg.png).
  - Contains a max-width container (.heroContent) that left-aligns the logo & heading.
*/
body {
  margin: 0;
}
.heroSection {
  background: url("/images/hero-section.png") no-repeat center / cover;
  padding: 5rem 0rem; /* spacing around the hero */
}

/* 
  A container inside the hero to control max width and left alignment.
  We center this container itself, but text inside is left-aligned.
*/
.heroContent {
  max-width: 600px; /* or our desired page width */
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* left align items */
}

/* 
  Logo Container 
  - Left aligned, but we can adjust spacing/margin if desired.
*/
.logoContainer {
  margin-bottom: 1rem;
}

/* 
  Hero Title 
  - Large heading, left aligned
*/
.heroTitle {
  font-size: 2.5rem;
  font-weight: 700;
  margin: 0.5rem 0;
  color: #2c2c2c;
  text-align: left;
}

/* 
  The rest of the page content (form) starts below the hero section.
  We add some top margin to create space between the hero and form.
*/
.mainContent {
  max-width: 600px; /* narrower container for the form */
  margin: 2rem auto;
  padding: 0 1rem;
  color: #000;
  /* font-weight: 600; */
  text-align: center;
}

.question {
  font-size: 1.5em;
}
.questionContent {
  font-size: 1em;
  font-weight: 700;
}
/* 
  The form container with a white background, 
  no negative margin overlap, just a simple card style if we want it.
*/
.formContainer {
  /* background: #fff; */
  /* border-radius: 8px; */
  padding: 2rem;
  /* box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05); */
}

/* The form fields are displayed in a column. */
.formFields {
  display: flex;
  flex-direction: column;
  gap: 1.5rem; /* spacing between form elements */
}

/* Each field group wraps an input or select or textarea. */
.fieldGroup {
  display: flex;
  flex-direction: column;
}

/* Inputs, selects, textareas share base styles. */
.input,
.select,
.textarea {
  padding: 0.75rem;
  border: 1px solid #ccc;
  border-radius: 10px;
  font-size: 1rem;
  background-color: #fff;
  color: #000;
  outline: none;
}

/* Multiple select styling */
.select[multiple] {
  height: 5rem;
  overflow-y: auto;
}

/* File input */
.fileInput {
  font-size: 0.95rem;
  padding: 0;
  background-color: #efefef;
  border-radius: 8px;
}

/* Textarea resizing */
.textarea {
  resize: vertical;
}

/* Centering images (icons) in the form. 
   we can also wrap them in a container if we prefer. */
.questionIcon {
  display: block;
  margin: 0 auto; /* centers horizontally */
  margin-top: 10px;
}

/* Submit button: black background, white text. */
.submitButton {
  display: inline-block;
  background: #000;
  color: #fff;
  border: none;
  border-radius: 10px;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  cursor: pointer;
  align-self: center;
  transition: background 0.3s ease;
  width: 500px;
}

.submitButton:hover {
  background: #333;
}

/* Error message styling */
.errorMessage {
  color: red;
  font-size: 0.875rem;
  margin-top: 0.25rem;
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem; /* spacing between each checkbox row */
}

/* Each label wraps the checkbox and the text */
.checkboxLabel {
  display: flex;
  align-items: center;
  gap: 0.5rem; /* space between the checkbox and the text */
}

/* Optionally, style the checkbox input itself */
.checkboxLabel input[type="checkbox"] {
  width: 16px;
  height: 16px;
  accent-color: black;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .heroTitle {
    font-size: 2rem;
  }
  .mainContent {
    margin: 1rem auto;
    padding: 0 1rem;
  }
  .formContainer {
    padding: 1.5rem;
  }
}
